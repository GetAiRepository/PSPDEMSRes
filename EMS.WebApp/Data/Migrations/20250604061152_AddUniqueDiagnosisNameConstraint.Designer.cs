// <auto-generated />
using System;
using EMS.WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMS.WebApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250604061152_AddUniqueDiagnosisNameConstraint")]
    partial class AddUniqueDiagnosisNameConstraint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMS.WebApp.Data.AccountLogin", b =>
                {
                    b.Property<int>("login_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("login_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("login_id"));

                    b.Property<string>("SessionToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TokenIssuedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("user_name");

                    b.HasKey("login_id");

                    b.ToTable("account_login", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.HrEmployee", b =>
                {
                    b.Property<int>("emp_uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("emp_uid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("emp_uid"));

                    b.Property<short>("dept_id")
                        .HasColumnType("smallint")
                        .HasColumnName("dept_id");

                    b.Property<DateOnly?>("emp_DOB")
                        .HasColumnType("date")
                        .HasColumnName("emp_DOB");

                    b.Property<string>("emp_Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("emp_Gender")
                        .IsFixedLength();

                    b.Property<string>("emp_Grade")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("emp_Grade");

                    b.Property<string>("emp_blood_Group")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("emp_blood_Group");

                    b.Property<string>("emp_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("emp_id");

                    b.Property<string>("emp_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("emp_name");

                    b.Property<short>("plant_id")
                        .HasColumnType("smallint")
                        .HasColumnName("plant_id");

                    b.HasKey("emp_uid");

                    b.HasIndex("dept_id");

                    b.HasIndex("plant_id");

                    b.ToTable("hr_employee", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.HrEmployeeDependent", b =>
                {
                    b.Property<int>("emp_dep_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("emp_dep_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("emp_dep_id"));

                    b.Property<DateOnly?>("dep_dob")
                        .HasColumnType("date")
                        .HasColumnName("dep_dob");

                    b.Property<string>("dep_name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("dep_name");

                    b.Property<int>("emp_uid")
                        .HasColumnType("int")
                        .HasColumnName("emp_uid");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("gender")
                        .IsFixedLength();

                    b.Property<bool>("is_active")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("marital_status")
                        .HasColumnType("bit")
                        .HasColumnName("marital_status");

                    b.Property<string>("relation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("relation");

                    b.HasKey("emp_dep_id");

                    b.HasIndex("emp_uid");

                    b.ToTable("hr_employee_dependent", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.MedBase", b =>
                {
                    b.Property<int>("BaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("base_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaseId"));

                    b.Property<string>("BaseDesc")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("base_desc");

                    b.Property<string>("BaseName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("base_name");

                    b.HasKey("BaseId");

                    b.ToTable("med_base", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.MedCategory", b =>
                {
                    b.Property<int>("MedCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("medcat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedCatId"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<string>("MedCatName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("medcat_name");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("remarks");

                    b.HasKey("MedCatId");

                    b.ToTable("med_category", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.MedDiagnosis", b =>
                {
                    b.Property<int>("diag_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("diag_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("diag_id"));

                    b.Property<string>("diag_desc")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("diag_desc");

                    b.Property<string>("diag_name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("diag_name");

                    b.HasKey("diag_id");

                    b.HasIndex("diag_name")
                        .IsUnique()
                        .HasDatabaseName("IX_MedDiagnosis_DiagName_Unique");

                    b.ToTable("med_diagnosis", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.MedDisease", b =>
                {
                    b.Property<int>("DiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("disease_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiseaseId"));

                    b.Property<string>("DiseaseDesc")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("disease_desc");

                    b.Property<string>("DiseaseName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("disease_name");

                    b.HasKey("DiseaseId");

                    b.HasIndex("DiseaseName")
                        .IsUnique()
                        .HasDatabaseName("IX_MedDisease_DiseaseName_Unique");

                    b.ToTable("med_disease", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.MedExamCategory", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatId"));

                    b.Property<string>("AnnuallyRule")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("annually_rule");

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cat_name");

                    b.Property<string>("MonthsSched")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("months_sched");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("remarks");

                    b.Property<byte>("YearsFreq")
                        .HasColumnType("tinyint")
                        .HasColumnName("years_freq");

                    b.HasKey("CatId");

                    b.ToTable("med_exam_category", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.MedMaster", b =>
                {
                    b.Property<int>("MedItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("med_item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedItemId"));

                    b.Property<int?>("BaseId")
                        .HasColumnType("int")
                        .HasColumnName("base_id");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("company_name");

                    b.Property<string>("MedItemName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("med_item_name");

                    b.Property<string>("Potency")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("potency");

                    b.Property<int>("ReorderLimit")
                        .HasColumnType("int")
                        .HasColumnName("reorder_limit");

                    b.Property<int?>("SafeDose")
                        .HasColumnType("int")
                        .HasColumnName("safe_dose");

                    b.HasKey("MedItemId");

                    b.HasIndex("BaseId");

                    b.ToTable("med_master", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.MedRefHospital", b =>
                {
                    b.Property<int>("hosp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hosp_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hosp_id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("contact_person_email_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_person_email_id");

                    b.Property<string>("contact_person_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_person_name");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("hosp_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hosp_code");

                    b.Property<string>("hosp_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hosp_name");

                    b.Property<long?>("mobile_number_1")
                        .HasColumnType("bigint")
                        .HasColumnName("mobile_number_1");

                    b.Property<long?>("mobile_number_2")
                        .HasColumnType("bigint")
                        .HasColumnName("mobile_number_2");

                    b.Property<long?>("phone_number_1")
                        .HasColumnType("bigint")
                        .HasColumnName("phone_number_1");

                    b.Property<long?>("phone_number_2")
                        .HasColumnType("bigint")
                        .HasColumnName("phone_number_2");

                    b.Property<string>("speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("speciality");

                    b.Property<string>("tax_category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tax_category");

                    b.Property<string>("vendor_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_code");

                    b.Property<string>("vendor_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_name");

                    b.HasKey("hosp_id");

                    b.ToTable("med_ref_hospital", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.SysAttachScreenRole", b =>
                {
                    b.Property<int>("uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uid"));

                    b.Property<int>("role_uid")
                        .HasColumnType("int")
                        .HasColumnName("role_uid");

                    b.Property<string>("screen_uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("screen_uid");

                    b.HasKey("uid");

                    b.HasIndex("role_uid")
                        .IsUnique();

                    b.ToTable("sys_attach_screen_role", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.SysRole", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("role_id"));

                    b.Property<string>("role_desc")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("role_desc");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("role_name");

                    b.HasKey("role_id");

                    b.HasIndex("role_name")
                        .IsUnique()
                        .HasDatabaseName("IX_SysRole_RoleName_Unique");

                    b.ToTable("sys_role", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.SysUser", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("adid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("adid");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("email");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("full_name");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int>("role_id")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("user_id");

                    b.HasIndex("role_id");

                    b.ToTable("sys_user", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.med_ambulance_master", b =>
                {
                    b.Property<int>("amb_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("amb_id"));

                    b.Property<bool>("is_active")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<byte>("max_capacity")
                        .HasColumnType("tinyint")
                        .HasColumnName("max_capacity");

                    b.Property<string>("provider")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("provider");

                    b.Property<string>("vehicle_no")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("vehicle_no");

                    b.Property<string>("vehicle_type")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("vehicle_type");

                    b.HasKey("amb_id")
                        .HasName("PK__med_ambu__9FDA4AE611BCF6CF");

                    b.ToTable("med_ambulance_master", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.org_department", b =>
                {
                    b.Property<short>("dept_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("dept_id"));

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("dept_description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("dept_name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("dept_id")
                        .HasName("PK__org_depa__DCA65974896CEDB8");

                    b.ToTable("org_department", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.org_plant", b =>
                {
                    b.Property<short>("plant_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("plant_id"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Description");

                    b.Property<string>("plant_code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("plant_code");

                    b.Property<string>("plant_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("plant_id")
                        .HasName("PK__org_plan__A576B3B47C5A3448");

                    b.ToTable("org_plant", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.sys_screen_name", b =>
                {
                    b.Property<int>("screen_uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("screen_uid"));

                    b.Property<string>("screen_description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("screen_name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("screen_uid")
                        .HasName("PK__sys_scre__B2C9B83A098D0056");

                    b.ToTable("sys_screen_name", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.Data.HrEmployee", b =>
                {
                    b.HasOne("EMS.WebApp.Data.org_department", "org_department")
                        .WithMany("HrEmployees")
                        .HasForeignKey("dept_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMS.WebApp.Data.org_plant", "org_plant")
                        .WithMany("HrEmployees")
                        .HasForeignKey("plant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("org_department");

                    b.Navigation("org_plant");
                });

            modelBuilder.Entity("EMS.WebApp.Data.HrEmployeeDependent", b =>
                {
                    b.HasOne("EMS.WebApp.Data.HrEmployee", "HrEmployee")
                        .WithMany("HrEmployeeDependents")
                        .HasForeignKey("emp_uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HrEmployee");
                });

            modelBuilder.Entity("EMS.WebApp.Data.MedMaster", b =>
                {
                    b.HasOne("EMS.WebApp.Data.MedBase", "MedBase")
                        .WithMany("MedMasters")
                        .HasForeignKey("BaseId");

                    b.Navigation("MedBase");
                });

            modelBuilder.Entity("EMS.WebApp.Data.SysAttachScreenRole", b =>
                {
                    b.HasOne("EMS.WebApp.Data.SysRole", "SysRole")
                        .WithMany("SysAttachScreenRole")
                        .HasForeignKey("role_uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("EMS.WebApp.Data.SysUser", b =>
                {
                    b.HasOne("EMS.WebApp.Data.SysRole", "SysRole")
                        .WithMany("SysUsers")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("EMS.WebApp.Data.HrEmployee", b =>
                {
                    b.Navigation("HrEmployeeDependents");
                });

            modelBuilder.Entity("EMS.WebApp.Data.MedBase", b =>
                {
                    b.Navigation("MedMasters");
                });

            modelBuilder.Entity("EMS.WebApp.Data.SysRole", b =>
                {
                    b.Navigation("SysAttachScreenRole");

                    b.Navigation("SysUsers");
                });

            modelBuilder.Entity("EMS.WebApp.Data.org_department", b =>
                {
                    b.Navigation("HrEmployees");
                });

            modelBuilder.Entity("EMS.WebApp.Data.org_plant", b =>
                {
                    b.Navigation("HrEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
